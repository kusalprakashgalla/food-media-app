{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\kusal\\\\OneDrive\\\\Desktop\\\\Placement_Files\\\\placement_projects\\\\mern-project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\kusal\\\\OneDrive\\\\Desktop\\\\Placement_Files\\\\placement_projects\\\\mern-project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar PRELOADED_CLOUDINARY_PATH, config, utils;\nutils = require(\"./utils\");\nconfig = require(\"./config\");\nPRELOADED_CLOUDINARY_PATH = /^([^\\/]+)\\/([^\\/]+)\\/v(\\d+)\\/([^#]+)#([^\\/]+)$/;\nvar PreloadedFile = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function PreloadedFile(file_info) {\n    _classCallCheck(this, PreloadedFile);\n    var matches, public_id_and_format;\n    matches = file_info.match(PRELOADED_CLOUDINARY_PATH);\n    if (!matches) {\n      throw \"Invalid preloaded file info\";\n    }\n    this.resource_type = matches[1];\n    this.type = matches[2];\n    this.version = matches[3];\n    this.filename = matches[4];\n    this.signature = matches[5];\n    public_id_and_format = PreloadedFile.split_format(this.filename);\n    this.public_id = public_id_and_format[0];\n    this.format = public_id_and_format[1];\n  }\n  _createClass(PreloadedFile, [{\n    key: \"is_valid\",\n    value: function is_valid() {\n      var expected_signature;\n      expected_signature = utils.api_sign_request({\n        public_id: this.public_id,\n        version: this.version\n      }, config().api_secret);\n      return this.signature === expected_signature;\n    }\n  }, {\n    key: \"identifier\",\n    value: function identifier() {\n      return \"v\".concat(this.version, \"/\").concat(this.filename);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.resource_type, \"/\").concat(this.type, \"/v\").concat(this.version, \"/\").concat(this.filename, \"#\").concat(this.signature);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var _this = this;\n      var result = {};\n      Object.getOwnPropertyNames(this).forEach(function (key) {\n        var val = _this[key];\n        if (typeof val !== 'function') {\n          result[key] = val;\n        }\n      });\n      return result;\n    }\n  }], [{\n    key: \"split_format\",\n    value: function split_format(identifier) {\n      var format, last_dot, public_id;\n      last_dot = identifier.lastIndexOf(\".\");\n      if (last_dot === -1) {\n        return [identifier, null];\n      }\n      public_id = identifier.substr(0, last_dot);\n      format = identifier.substr(last_dot + 1);\n      return [public_id, format];\n    }\n  }]);\n  return PreloadedFile;\n}();\nmodule.exports = PreloadedFile;","map":null,"metadata":{},"sourceType":"script"}