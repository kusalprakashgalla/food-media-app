{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar bind = require('../internals/function-bind-context');\nvar aSet = require('../internals/a-set');\nvar iterate = require('../internals/set-iterate');\n\n// `Set.prototype.find` method\n// https://github.com/tc39/proposal-collection-methods\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  find: function find(callbackfn /* , thisArg */) {\n    var set = aSet(this);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    var result = iterate(set, function (value) {\n      if (boundFunction(value, value, set)) return {\n        value: value\n      };\n    }, true);\n    return result && result.value;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}