{"ast":null,"code":"'use strict';\n\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.map');\nrequire('../modules/es.weak-map');\nvar getBuiltIn = require('../internals/get-built-in');\nvar create = require('../internals/object-create');\nvar isObject = require('../internals/is-object');\nvar $Object = Object;\nvar $TypeError = TypeError;\nvar Map = getBuiltIn('Map');\nvar WeakMap = getBuiltIn('WeakMap');\nvar Node = function Node() {\n  // keys\n  this.object = null;\n  this.symbol = null;\n  // child nodes\n  this.primitives = null;\n  this.objectsByIndex = create(null);\n};\nNode.prototype.get = function (key, initializer) {\n  return this[key] || (this[key] = initializer());\n};\nNode.prototype.next = function (i, it, IS_OBJECT) {\n  var store = IS_OBJECT ? this.objectsByIndex[i] || (this.objectsByIndex[i] = new WeakMap()) : this.primitives || (this.primitives = new Map());\n  var entry = store.get(it);\n  if (!entry) store.set(it, entry = new Node());\n  return entry;\n};\nvar root = new Node();\nmodule.exports = function () {\n  var active = root;\n  var length = arguments.length;\n  var i, it;\n  // for prevent leaking, start from objects\n  for (i = 0; i < length; i++) {\n    if (isObject(it = arguments[i])) active = active.next(i, it, true);\n  }\n  if (this === $Object && active === root) throw $TypeError('Composite keys must contain a non-primitive component');\n  for (i = 0; i < length; i++) {\n    if (!isObject(it = arguments[i])) active = active.next(i, it, false);\n  }\n  return active;\n};","map":null,"metadata":{},"sourceType":"script"}