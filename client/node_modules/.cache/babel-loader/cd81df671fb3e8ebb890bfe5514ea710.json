{"ast":null,"code":"'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toString = require('../internals/to-string');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar $TypeError = TypeError;\nvar push = uncurryThis([].push);\nvar join = uncurryThis([].join);\n\n// `String.cooked` method\n// https://tc39.es/proposal-string-cooked/\nmodule.exports = function cooked(template /* , ...substitutions */) {\n  var cookedTemplate = toIndexedObject(template);\n  var literalSegments = lengthOfArrayLike(cookedTemplate);\n  if (!literalSegments) return '';\n  var argumentsLength = arguments.length;\n  var elements = [];\n  var i = 0;\n  while (true) {\n    var nextVal = cookedTemplate[i++];\n    if (nextVal === undefined) throw $TypeError('Incorrect template');\n    push(elements, toString(nextVal));\n    if (i === literalSegments) return join(elements, '');\n    if (i < argumentsLength) push(elements, toString(arguments[i]));\n  }\n};","map":null,"metadata":{},"sourceType":"script"}