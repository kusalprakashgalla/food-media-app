{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar apply = require('../internals/function-apply');\nvar getCompositeKeyNode = require('../internals/composite-key');\nvar getBuiltIn = require('../internals/get-built-in');\nvar create = require('../internals/object-create');\nvar $Object = Object;\nvar initializer = function initializer() {\n  var freeze = getBuiltIn('Object', 'freeze');\n  return freeze ? freeze(create(null)) : create(null);\n};\n\n// https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey\n$({\n  global: true,\n  forced: true\n}, {\n  compositeKey: function compositeKey() {\n    return apply(getCompositeKeyNode, $Object, arguments).get('object', initializer);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}