{"ast":null,"code":"'use strict';\n\n/* eslint-disable no-unused-vars -- required for functions `.length` */\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar wrapErrorConstructorWithCause = require('../internals/wrap-error-constructor-with-cause');\nvar WEB_ASSEMBLY = 'WebAssembly';\nvar WebAssembly = global[WEB_ASSEMBLY];\nvar FORCED = Error('e', {\n  cause: 7\n}).cause !== 7;\nvar exportGlobalErrorCauseWrapper = function exportGlobalErrorCauseWrapper(ERROR_NAME, wrapper) {\n  var O = {};\n  O[ERROR_NAME] = wrapErrorConstructorWithCause(ERROR_NAME, wrapper, FORCED);\n  $({\n    global: true,\n    constructor: true,\n    arity: 1,\n    forced: FORCED\n  }, O);\n};\nvar exportWebAssemblyErrorCauseWrapper = function exportWebAssemblyErrorCauseWrapper(ERROR_NAME, wrapper) {\n  if (WebAssembly && WebAssembly[ERROR_NAME]) {\n    var O = {};\n    O[ERROR_NAME] = wrapErrorConstructorWithCause(WEB_ASSEMBLY + '.' + ERROR_NAME, wrapper, FORCED);\n    $({\n      target: WEB_ASSEMBLY,\n      stat: true,\n      constructor: true,\n      arity: 1,\n      forced: FORCED\n    }, O);\n  }\n};\n\n// https://tc39.es/ecma262/#sec-nativeerror\nexportGlobalErrorCauseWrapper('Error', function (init) {\n  return function Error(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('EvalError', function (init) {\n  return function EvalError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('RangeError', function (init) {\n  return function RangeError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('ReferenceError', function (init) {\n  return function ReferenceError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('SyntaxError', function (init) {\n  return function SyntaxError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('TypeError', function (init) {\n  return function TypeError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportGlobalErrorCauseWrapper('URIError', function (init) {\n  return function URIError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportWebAssemblyErrorCauseWrapper('CompileError', function (init) {\n  return function CompileError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportWebAssemblyErrorCauseWrapper('LinkError', function (init) {\n  return function LinkError(message) {\n    return apply(init, this, arguments);\n  };\n});\nexportWebAssemblyErrorCauseWrapper('RuntimeError', function (init) {\n  return function RuntimeError(message) {\n    return apply(init, this, arguments);\n  };\n});","map":null,"metadata":{},"sourceType":"script"}