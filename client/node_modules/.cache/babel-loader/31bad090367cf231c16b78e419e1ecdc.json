{"ast":null,"code":"'use strict';\n\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar closeAsyncIteration = require('../internals/async-iterator-close');\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (Promise) {\n  var state = this;\n  var iterator = state.iterator;\n  var mapper = state.mapper;\n  return new Promise(function (resolve, reject) {\n    var doneAndReject = function doneAndReject(error) {\n      state.done = true;\n      reject(error);\n    };\n    var ifAbruptCloseAsyncIterator = function ifAbruptCloseAsyncIterator(error) {\n      closeAsyncIteration(iterator, doneAndReject, error, doneAndReject);\n    };\n    Promise.resolve(anObject(call(state.next, iterator))).then(function (step) {\n      try {\n        if (anObject(step).done) {\n          state.done = true;\n          resolve(createIterResultObject(undefined, true));\n        } else {\n          var value = step.value;\n          try {\n            var result = mapper(value, state.counter++);\n            var handler = function handler(mapped) {\n              resolve(createIterResultObject(mapped, false));\n            };\n            if (isObject(result)) Promise.resolve(result).then(handler, ifAbruptCloseAsyncIterator);else handler(result);\n          } catch (error2) {\n            ifAbruptCloseAsyncIterator(error2);\n          }\n        }\n      } catch (error) {\n        doneAndReject(error);\n      }\n    }, doneAndReject);\n  });\n});\n\n// `AsyncIterator.prototype.map` method\n// https://github.com/tc39/proposal-iterator-helpers\nmodule.exports = function map(mapper) {\n  anObject(this);\n  aCallable(mapper);\n  return new AsyncIteratorProxy(getIteratorDirect(this), {\n    mapper: mapper\n  });\n};","map":null,"metadata":{},"sourceType":"script"}