{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar installErrorStack = require('../internals/error-stack-install');\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Error = Error;\nvar $SuppressedError = function SuppressedError(error, suppressed, message) {\n  var isInstance = isPrototypeOf(SuppressedErrorPrototype, this);\n  var that;\n  if (setPrototypeOf) {\n    that = setPrototypeOf($Error(), isInstance ? getPrototypeOf(this) : SuppressedErrorPrototype);\n  } else {\n    that = isInstance ? this : create(SuppressedErrorPrototype);\n    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');\n  }\n  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));\n  installErrorStack(that, $SuppressedError, that.stack, 1);\n  createNonEnumerableProperty(that, 'error', error);\n  createNonEnumerableProperty(that, 'suppressed', suppressed);\n  return that;\n};\nif (setPrototypeOf) setPrototypeOf($SuppressedError, $Error);else copyConstructorProperties($SuppressedError, $Error, {\n  name: true\n});\nvar SuppressedErrorPrototype = $SuppressedError.prototype = create($Error.prototype, {\n  constructor: createPropertyDescriptor(1, $SuppressedError),\n  message: createPropertyDescriptor(1, ''),\n  name: createPropertyDescriptor(1, 'SuppressedError')\n});\n\n// `SuppressedError` constructor\n// https://github.com/tc39/proposal-explicit-resource-management\n$({\n  global: true,\n  constructor: true,\n  arity: 3\n}, {\n  SuppressedError: $SuppressedError\n});","map":null,"metadata":{},"sourceType":"script"}