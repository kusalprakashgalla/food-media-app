{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar notANaN = require('../internals/not-a-nan');\nvar toPositiveInteger = require('../internals/to-positive-integer');\nvar createAsyncIteratorProxy = require('../internals/async-iterator-create-proxy');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar IS_PURE = require('../internals/is-pure');\nvar AsyncIteratorProxy = createAsyncIteratorProxy(function (Promise) {\n  var state = this;\n  var iterator = state.iterator;\n  var returnMethod;\n  if (!state.remaining--) {\n    var resultDone = createIterResultObject(undefined, true);\n    state.done = true;\n    returnMethod = iterator['return'];\n    if (returnMethod !== undefined) {\n      return Promise.resolve(call(returnMethod, iterator, undefined)).then(function () {\n        return resultDone;\n      });\n    }\n    return resultDone;\n  }\n  return Promise.resolve(call(state.next, iterator)).then(function (step) {\n    if (anObject(step).done) {\n      state.done = true;\n      return createIterResultObject(undefined, true);\n    }\n    return createIterResultObject(step.value, false);\n  }).then(null, function (error) {\n    state.done = true;\n    throw error;\n  });\n});\n\n// `AsyncIterator.prototype.take` method\n// https://github.com/tc39/proposal-async-iterator-helpers\n$({\n  target: 'AsyncIterator',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  take: function take(limit) {\n    anObject(this);\n    var remaining = toPositiveInteger(notANaN(+limit));\n    return new AsyncIteratorProxy(getIteratorDirect(this), {\n      remaining: remaining\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"script"}