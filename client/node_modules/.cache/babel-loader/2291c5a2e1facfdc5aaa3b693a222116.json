{"ast":null,"code":"'use strict';\n\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toObject = require('../internals/to-object');\nvar MapHelpers = require('../internals/map-helpers');\nvar iterate = require('../internals/map-iterate');\nvar Map = MapHelpers.Map;\nvar mapHas = MapHelpers.has;\nvar mapSet = MapHelpers.set;\nvar push = uncurryThis([].push);\n\n// `Array.prototype.uniqueBy` method\n// https://github.com/tc39/proposal-array-unique\nmodule.exports = function uniqueBy(resolver) {\n  var that = toObject(this);\n  var length = lengthOfArrayLike(that);\n  var result = [];\n  var map = new Map();\n  var resolverFunction = !isNullOrUndefined(resolver) ? aCallable(resolver) : function (value) {\n    return value;\n  };\n  var index, item, key;\n  for (index = 0; index < length; index++) {\n    item = that[index];\n    key = resolverFunction(item);\n    if (!mapHas(map, key)) mapSet(map, key, item);\n  }\n  iterate(map, function (value) {\n    push(result, value);\n  });\n  return result;\n};","map":null,"metadata":{},"sourceType":"script"}