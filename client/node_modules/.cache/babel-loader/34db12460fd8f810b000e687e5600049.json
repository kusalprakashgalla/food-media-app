{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\n// `Iterator.prototype.find` method\n// https://github.com/tc39/proposal-iterator-helpers\n$({\n  target: 'Iterator',\n  proto: true,\n  real: true\n}, {\n  find: function find(predicate) {\n    anObject(this);\n    aCallable(predicate);\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, {\n      IS_RECORD: true,\n      INTERRUPTED: true\n    }).result;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}