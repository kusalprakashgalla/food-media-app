{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar sdkCode = 'M'; // Constant per SDK\n\n/**\n * @description Gets the relevant versions of the SDK(package version, node version and sdkCode)\n * @param {'default' | 'x.y.z' | 'x.y' | string} useSDKVersion Default uses package.json version\n * @param {'default' | 'x.y.z' | 'x.y' | string} useNodeVersion Default uses process.versions.node\n * @return {{sdkSemver:string, techVersion:string, sdkCode:string}} A map of relevant versions and codes\n */\nfunction getSDKVersions() {\n  var useSDKVersion = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n  var useNodeVersion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n  var pkgJSONFile = fs.readFileSync(path.join(__dirname, '../../../../package.json'), 'utf-8');\n\n  // allow to pass a custom SDKVersion\n  var sdkSemver = useSDKVersion === 'default' ? JSON.parse(pkgJSONFile).version : useSDKVersion;\n\n  // allow to pass a custom techVersion (Node version)\n  var techVersion = useNodeVersion === 'default' ? process.versions.node : useNodeVersion;\n  return {\n    sdkSemver: sdkSemver,\n    techVersion: techVersion,\n    sdkCode: sdkCode\n  };\n}\nmodule.exports = getSDKVersions;","map":null,"metadata":{},"sourceType":"script"}