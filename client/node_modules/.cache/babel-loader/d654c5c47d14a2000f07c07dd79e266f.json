{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar bind = require('../internals/function-bind-context');\nvar aMap = require('../internals/a-map');\nvar MapHelpers = require('../internals/map-helpers');\nvar iterate = require('../internals/map-iterate');\nvar Map = MapHelpers.Map;\nvar set = MapHelpers.set;\n\n// `Map.prototype.mapValues` method\n// https://github.com/tc39/proposal-collection-methods\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  mapValues: function mapValues(callbackfn /* , thisArg */) {\n    var map = aMap(this);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    var newMap = new Map();\n    iterate(map, function (value, key) {\n      set(newMap, key, boundFunction(value, key, map));\n    });\n    return newMap;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}