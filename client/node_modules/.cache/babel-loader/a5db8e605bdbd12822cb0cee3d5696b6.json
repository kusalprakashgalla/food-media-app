{"ast":null,"code":"'use strict';\n\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar definePropertyModule = require('../internals/object-define-property');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar HAS_INSTANCE = wellKnownSymbol('hasInstance');\nvar FunctionPrototype = Function.prototype;\n\n// `Function.prototype[@@hasInstance]` method\n// https://tc39.es/ecma262/#sec-function.prototype-@@hasinstance\nif (!(HAS_INSTANCE in FunctionPrototype)) {\n  definePropertyModule.f(FunctionPrototype, HAS_INSTANCE, {\n    value: makeBuiltIn(function (O) {\n      if (!isCallable(this) || !isObject(O)) return false;\n      var P = this.prototype;\n      if (!isObject(P)) return O instanceof this;\n      // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n      while (O = getPrototypeOf(O)) if (P === O) return true;\n      return false;\n    }, HAS_INSTANCE)\n  });\n}","map":null,"metadata":{},"sourceType":"script"}