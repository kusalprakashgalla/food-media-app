{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toPropertyKey = require('../internals/to-property-key');\nvar iterate = require('../internals/iterate');\nvar create = getBuiltIn('Object', 'create');\nvar push = uncurryThis([].push);\n\n// `Object.groupBy` method\n// https://github.com/tc39/proposal-array-grouping\n$({\n  target: 'Object',\n  stat: true\n}, {\n  groupBy: function groupBy(items, callbackfn) {\n    requireObjectCoercible(items);\n    aCallable(callbackfn);\n    var obj = create(null);\n    var k = 0;\n    iterate(items, function (value) {\n      var key = toPropertyKey(callbackfn(value, k++));\n      // in some IE versions, `hasOwnProperty` returns incorrect result on integer keys\n      // but since it's a `null` prototype object, we can safely use `in`\n      if (key in obj) push(obj[key], value);else obj[key] = [value];\n    });\n    return obj;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}