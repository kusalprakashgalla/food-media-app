{"ast":null,"code":"'use strict';\n\nvar utils = require(\"../utils\");\nvar call_account_api = require('../api_client/call_account_api');\nvar pickOnlyExistingValues = utils.pickOnlyExistingValues;\n\n/**\n * @desc Lists sub-accounts.\n * @param [enabled] {boolean} - Whether to only return enabled sub-accounts (true) or disabled accounts (false).\n *                              Default: all accounts are returned (both enabled and disabled).\n * @param [ids] {number[]} - A list of up to 100 sub-account IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns accounts where the name begins with the specified case-insensitive string.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\n\nfunction sub_accounts(enabled) {\n  var ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var prefix = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var callback = arguments[4];\n  var params = {\n    enabled: enabled,\n    ids: ids,\n    prefix: prefix\n  };\n  var uri = ['sub_accounts'];\n  return call_account_api('GET', uri, params, callback, options);\n}\n\n/**\n * @desc Retrieves the details of the specified sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction sub_account(sub_account_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['sub_accounts', sub_account_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Creates a new sub-account. Any users that have access to all sub-accounts will also automatically have access\n *       to the new sub-account.\n * @param name {string} The display name as shown in the management console.\n * @param cloud_name {string} A case-insensitive cloud name comprised of alphanumeric and underscore characters.\n *                            Generates an error if the specified cloud name is not unique across all Cloudinary\n *                            accounts. Note: Once created, the name can only be changed for accounts with fewer than\n *                            1000 assets.\n * @param custom_attributes {object} Any custom attributes you want to associate with the sub-account, as a map/hash of\n *                                   key/value pairs.\n * @param enabled {boolean} Whether the sub-account is enabled. Default: true\n * @param base_account {string} The ID of another sub-account, from which to copy all of the following settings:\n *                              Size limits, Timed limits, and Flags.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param callback\n */\nfunction create_sub_account(name, cloud_name, custom_attributes, enabled, base_account) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var callback = arguments[6];\n  var params = {\n    cloud_name: cloud_name,\n    name: name,\n    custom_attributes: custom_attributes,\n    enabled: enabled,\n    base_sub_account_id: base_account\n  };\n  options.content_type = \"json\";\n  var uri = ['sub_accounts'];\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes the specified sub-account. Supported only for accounts with fewer than 1000 assets.\n * @param sub_account_id {string} - The ID of the sub-account to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_sub_account(sub_account_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['sub_accounts', sub_account_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Updates the specified details of the sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [name] {string} - The display name as shown in the management console.\n * @param [cloud_name] {string} - A new cloud name for the account.\n *                                Notes:\n *                                  - Can only be changed for accounts with fewer than 1000 assets.\n *                                  - generates an error if the cloud name is not unique across all Cloudinary accounts.\n * @param [custom_attributes] {object} - Any custom attributes you want to associate with the sub-account, as a map/hash\n *                                       of key/value pairs.\n * @param [enabled] {boolean} - Whether the sub-account is enabled.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_sub_account(sub_account_id, name, cloud_name, custom_attributes, enabled) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var callback = arguments[6];\n  var params = {\n    cloud_name: cloud_name,\n    name: name,\n    custom_attributes: custom_attributes,\n    enabled: enabled\n  };\n  options.content_type = \"json\";\n  var uri = ['sub_accounts', sub_account_id];\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Returns the user with the specified ID.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user(user_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['users', user_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists users in the account.\n * @param [pending] {boolean} - Limit results to pending users (true), users that are not pending (false), or all users (undefined, the default)\n * @param [user_ids] {string[]} - A list of up to 100 user IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns users where the name or email address begins with the specified case-insensitive\n *                            string.\n * @param [sub_account_id[ {string} - Only returns users who have access to the specified account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction users(pending, user_ids, prefix, sub_account_id) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var callback = arguments[5];\n  var uri = ['users'];\n  var params = {\n    ids: user_ids,\n    pending: pending,\n    prefix: prefix,\n    sub_account_id: sub_account_id\n  };\n  return call_account_api('GET', uri, pickOnlyExistingValues(params, \"ids\", \"pending\", \"prefix\", \"sub_account_id\"), callback, options);\n}\n\n/**\n * @desc Creates a new user in the account.\n * @param name {string} - The name of the user.\n * @param email {string} - A unique email address, which serves as the login name and notification address.\n * @param role {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                                             media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction create_user(name, email, role, sub_account_ids) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var callback = arguments[5];\n  var uri = ['users'];\n  var params = {\n    name: name,\n    email: email,\n    role: role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Updates the details of the specified user.\n * @param user_id {string} - The ID of the user to update.\n * @param [name] {string} - The name of the user.\n * @param [email] {string} - A unique email address, which serves as the login name and notification address.\n * @param [role] {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                              media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_user(user_id, name, email, role, sub_account_ids) {\n  var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var callback = arguments[6];\n  var uri = ['users', user_id];\n  var params = {\n    name: name,\n    email: email,\n    role: role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes an existing user.\n * @param user_id {string} - The ID of the user to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_user(user_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Creates a new user group.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction create_user_group(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['user_groups'];\n  options.content_type = 'json';\n  var params = {\n    name: name\n  };\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Updates the specified user group.\n * @param group_id {string} The ID of the user group to update.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_user_group(group_id, name) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n  var uri = ['user_groups', group_id];\n  var params = {\n    name: name\n  };\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes the user group with the specified ID.\n * @param group_id {string} The ID of the user group to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_user_group(group_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['user_groups', group_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Adds a user to a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction add_user_to_group(group_id, user_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n  var uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('POST', uri, {}, callback, options);\n}\n\n/**\n * @desc Removes a user from a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction remove_user_from_group(group_id, user_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var callback = arguments[3];\n  var uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Retrieves the details of the specified user group.\n * @param group_id {string} - The ID of the user group to retrieve.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_group(group_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['user_groups', group_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists user groups in the account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_groups() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments[1];\n  var uri = ['user_groups'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists users in the specified user group.\n * @param group_id {string} - The ID of the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_group_users(group_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments[2];\n  var uri = ['user_groups', group_id, 'users'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\nmodule.exports = {\n  sub_accounts: sub_accounts,\n  create_sub_account: create_sub_account,\n  delete_sub_account: delete_sub_account,\n  sub_account: sub_account,\n  update_sub_account: update_sub_account,\n  user: user,\n  users: users,\n  user_group: user_group,\n  user_groups: user_groups,\n  user_group_users: user_group_users,\n  remove_user_from_group: remove_user_from_group,\n  delete_user: delete_user,\n  update_user_group: update_user_group,\n  update_user: update_user,\n  create_user: create_user,\n  create_user_group: create_user_group,\n  add_user_to_group: add_user_to_group,\n  delete_user_group: delete_user_group\n};","map":null,"metadata":{},"sourceType":"script"}